def versions = [:]
versions.kotlin = '1.3.0'
versions.appCompact = '1.0.0'
versions.constraintLayout = '1.1.2'
versions.rxJava = '2.1.10'
versions.rxAndroid='2.0.1'
versions.retrofit='2.4.0'
versions.dagger='2.16'
versions.gson='2.8.2'
versions.lifecycleVersion = '2.0.0'
versions.materialVersion = '1.0.0-rc01'
versions.timber='4.7.1'
versions.test_junit = '4.12'
versions.test_runner = '1.0.2'
versions.test_espresso = '3.0.2'
versions.mockito='2.1.0'
versions.mock_webserver='3.13.1'
versions.arch_comp='2.0.0'
versions.paging='2.1.0-rc01'
versions.navigation='1.0.0-alpha01'
versions.piccaso='2.71828'
versions.room = "2.1.0-alpha03"



//Build version details
ext.build_version = [:]

def build_version= [:]
build_version.compile_sdk = 28
build_version.target_sdk = 28
build_version.min_sdk = 16
build_version.sdk_version = "1.0"
build_version.versionName="1.0"
build_version.version_code= 1
build_version.build_tools = "28.0.3"
ext.build_version = build_version

//plugin
def plugin = [:]
plugin.kotlin_android = 'kotlin-android'
plugin.kotlin_android_etn = 'kotlin-android-extensions'
plugin.kotlin_antn_pro = 'kotlin-kapt'
plugin.safe_args = 'androidx.navigation.safeargs'
plugin.jetbrain_extn = 'org.jetbrains.kotlin.android.extensions'
ext.plugin = plugin

//Dependency
def dep = [:]

//Kotlin
def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.kotlin_gradle="org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.compiler="com.android.databinding:compiler:$versions.kotlin"

dep.kotlin=kotlin



def archComponent = [:]
archComponent.lifecycle = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycleVersion"
dep.archComponent=archComponent


//Retrofit
def retrofit = [:]
retrofit.retrofit= "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.convertor= "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.rxjava2= 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
retrofit.logger="com.squareup.okhttp3:logging-interceptor:3.8.0"
dep.retrofit =retrofit



//support library
def app_compact = [:]
app_compact.v7="androidx.appcompat:appcompat:$versions.appCompact"
app_compact.constraint="androidx.constraintlayout:constraintlayout:$versions.constraintLayout"
app_compact.material = "com.google.android.material:material:$versions.materialVersion"
dep.app_compact= app_compact

//RxAndroid
//RxJava
def rxJava= [:]
rxJava.android = "io.reactivex.rxjava2:rxandroid:$versions.rxAndroid"
rxJava.java = "io.reactivex.rxjava2:rxjava:$versions.rxJava"
dep.rxJava=rxJava

def dagger = [:]
dagger.dagger = "com.google.dagger:dagger-android:$versions.dagger"
dagger.compiler= "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.androidAnnt = "com.google.dagger:dagger-android-processor:$versions.dagger"
dagger.androidSupport= "com.google.dagger:dagger-android-support:$versions.dagger"
dep.dagger = dagger

dep.gson= 'com.google.code.gson:gson:$versions.gson'

//Util dep
def util=[:]
util.logger="com.jakewharton.timber:timber:$versions.timber"
util.navigation="android.arch.navigation:navigation-fragment:$versions.navigation"
util.nav_classpath="android.arch.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
util.nav_ui="android.arch.navigation:navigation-ui-ktx:$versions.navigation"
util.picasso="com.squareup.picasso:picasso:$versions.piccaso"
dep.util=util

//Room
def room=[:]
room.runtime="androidx.room:room-runtime:$versions.room"
room.compiler="androidx.room:room-compiler:$versions.room"
room.rxjava="androidx.room:room-rxjava2:$versions.room"
dep.room=room

def paging=[:]
paging.runtime="androidx.paging:paging-runtime-ktx:$versions.paging"
dep.paging=paging

//test framework
def app_test = [:]
app_test.junit = "junit:junit:$versions.test_junit"
app_test.runner = "com.android.support.test:runner:$versions.test_runner"
app_test.espresso = "com.android.support.test.espresso:espresso-core:$versions.test_espresso"
app_test.mockito_kotlin = "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockito"
app_test.mock_webserver = "com.squareup.okhttp3:mockwebserver:$versions.mock_webserver"
app_test.arch_component="androidx.arch.core:core-testing:$versions.arch_comp"
dep.app_test = app_test
ext.dep = dep

def addRepos(RepositoryHandler handler){
    handler.google()
    handler.jcenter()
    handler.mavenCentral()
}
ext.addRepos = this.&addRepos
